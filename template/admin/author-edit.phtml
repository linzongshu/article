<?php
    $this->css(
        array(
            $this->assetModule('script/article-front-admin.css'),
            $this->assetModule('script/article-admin.css'),
            $this->assetModule('script/jquery.Jcrop.min.css'),
        )
    );
    $this->jQuery('extension/fileupload-min.js');
    $this->Backbone();
    $this->bootstrap('js/bootstrap.min.js');
    $this->js(array(
        $this->assetModule('script/ajax-upload-min.js'),
        $this->assetModule('script/jquery.Jcrop.min.js')
    ));
?>
<h2 class="page-header"><?php echo $this->escape($title); ?></h2>

<?php include 'message-box.phtml' ?>

<div id="jsUpload">
    <?php include $this->templateComponent('form'); ?>

    <script id="template-upload" type="text/template">
        <div>
            <div id="author-image" class="upload-image-bg">
                <?php $src = $form->get('photo')->getValue(); ?>
                <?php if ($src) { ?>
                    <div class="black-bg"><i class="author icon-remove"></i></div>    
                    <img src="<?php echo Pi::url($src) ?>">
                <?php } else { ?>    
                    <i class="icon-user"></i>
                <?php } ?>
            </div>
            <button class="btn upload fileinput-button" data-toggle="modal" href="#upload-box">
                <?php _e('Upload') ?>
            </button>
        </div>
    </script>

    <div id="upload-box" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="modal-header" aria-hidden="true">
        <!-- Header -->
        <div class="modal-header">
            <button id="photo-close" type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
            <h3 id="modal-header"><?php echo __('Modify Photo') ?></h3>
        </div>
        <!-- Body -->
        <div class="modal-body">
            <div class="article-uploaded-box">
                <div class="article-upload-hit">
                    <input class="btn article-add-photo" type="button" value="<?php _e('Upload') ?>" style="width: 110px;">
                    <div class="muted" style="margin-top: 10px; font-size: 12px;">
                        <?php echo __('Format supported: ') . implode(', ', $imageExtension) ?>
                        (<?php echo $this->escape($maxMediaSize) ?>)
                    </div>
                </div>
                <img class="hide article-upload-image">
            </div>
            <div class="article-preview-photo" style="width: <?php echo $this->escape($authorSize) ?>px; height: <?php echo $this->escape($authorSize) ?>px">
                <?php
                    if ($src) {
                ?>
                <img src="<?php echo Pi::url($src) ?>">
                <?php 
                    } else {
                ?>
                    <i class="icon-user"></i>
                <?php
                    }
                ?>
            </div>
            <input name="photo-url" type="hidden">
        </div>
        <!-- Footer -->
        <div class="modal-footer">
            <button id="photo-cancel" class="btn" data-dismiss="modal" aria-hidden="true"><?php _e('Cancel') ?></button>
            <button id="photo-process" class="btn btn-primary" data-dismiss="modal" ><?php _e('Yes') ?></button>
        </div>
    </div>
</div>

<script>
    var jcrop_api;
    var page = {
        id      : function() {
            return "<?php echo 'fake_id/' . $form->get('fake_id')->getValue() ?>";
        },
        form    : $("form.form-horizontal"),
        $       : function(selector) {
            return  this.form.find(selector);      
        },
        size    : '<?php echo $this->escape($authorSize) ?>',
        format  : function() {
            var format = '<?php echo implode(',', $imageExtension) ?>';
            var data   = new Array();
            data = format.split(',');
            return data;
        },
        init: function() {
            var self = this;
            page.$("[name=placeholder]")
                .parents(".control-group:first")
                .find(".controls")
                .html($("#template-upload").html());
            this.$el = $('#jsUpload');
            this.uploadImg = this.$('.a-upload-image');
            this.preImg = $('.article-preview-photo img');
            //$('#user-avatar-cancel').click(this.cancelAvatar.bind(this));
            //$('#user-avatar-save').click(this.savePhoto.bind(this));
            //$('input[name="source"]').click(this.changeSource.bind(this));
            //$('input[name="email"]').blur(this.changeGravatar.bind(this));
            this.ajaxUpload();
        },
        ajaxUpload: function() {
            new ajaxUpload($('.article-add-photo'), {
                action  : '<?php echo $this->url('', array(
                    'controller' => 'author',
                    'action'     => 'upload'
                )) ?>' + page.id(),
                format  : page.format(),
                name    : 'upload',
                json    : true,
                start   : function() {
                    page.$('.article-add-photo').val('<?php _e('In process ...') ?>');
                },
                done: function(res) {
                    if (res.status) {console.log(12);
                        page.$('.article-upload-hit').remove();
                        $('[target=ajaxUploadIframe]').remove();
                        page.initJcrop(res.data);
                    } else {
                        alert(res.message);
                        page.$('.article-add-photo').val('<?php _e('Upload') ?>');
                    }
                },
                fail: function() {
                    alert('<?php _e('Error occured, please try again!') ?>');
                    page.$('.article-add-photo').val('<?php _e('Upload') ?>');
                }
            });
        },
        initJcrop: function(res) {
            var url = res['preview_url'],
                boundx = 0,
                boundy = 0;
            var preImg = this.preImg;
            this.result = res;
            this.uploadImg.removeClass('hide').attr('src', url);
            this.preImg.attr('src', url);
            jcrop_api && jcrop_api.destroy();
            if (res.w > res.h) {
                boundx = 300;
            } else {
                boundy = 300;
            }
            if (boundx) {
                boundy = 300 * res.h / res.w;
                this.uploadImg.css({
                    width: 300,
                    height: boundy
                });
            } else {
                boundx = 300 * res.w / res.h;
                this.uploadImg.css({
                    width: boundx,
                    height: 300
                });
            }
            this.uploadImg.Jcrop({
                aspectRatio: 1,
                bgOpacity: .5,
                onChange: function(c) {
                    var rx = page.size / c.w;
                    var ry = page.size / c.h;

                    var r = Math.round;
                    
                    preImg.css({
                        'width'      : r(rx * boundx),
                        'height'     : r(ry * boundy),
                        'marginLeft' : r(-rx * c.x),
                        'marginTop'  : r(-ry * c.y)
                    });
                }
            }, function() {
                jcrop_api = this;
                var h = this.ui.holder;
                h.css({
                    left: (300 - h.outerWidth()) /2,
                    top: (300 - h.outerHeight()) /2     
                });
                this.setSelect([40,40,200,200]);
            });
        },
        savePhoto: function(e) {
            e.preventDefault();
            var source = $('input[name="source"]:checked').val();
            var d      = new Object();
            if ('upload' == source) {
                d = jcrop_api.tellScaled();
                var ret = this.result.w > this.result.h ? this.result.w / 300 : this.result.h / 300;
                this.$('.btn-primary').attr('disabled', 'disabled');
                for (var i in d) {
                    if (d.hasOwnProperty(i)) {
                        d[i] = Math.round(d[i] * ret);
                    }
                }
                d['avatar'] = this.result.preview_url;
                d['fake_id'] = '<?php echo $form->get('fake_id')->getValue() ?>';
            } else if ('gravatar' == source) {
                d['email'] = $('input[name="email"]').val();
            } else if ('repository' == source) {
                d['name'] = $('input[name="repository-avatar"]:checked').val();
            }
            
            d['source'] = source;
            $.post('<?php echo $this->url('', array('action' => 'save')); ?>', d).done(function(res) {
                res = $.parseJSON(res);
                if (res.status) {
                    window.location.reload();
                } else {
                    alert(res.message);
                }
            });
        },
        cancelAvatar    : function() {
            var source = $('input[name="source"]:checked').val();
            if ('upload' == source) {
                var url = '<?php echo $this->url('', array(
                    'controller'   => 'avatar',
                    'action'       => 'remove',
                    'fake_id'      => $form->get('fake_id')->getValue(),
                )) ?>';
                $.get(url, function(result) {
                    result = $.parseJSON(result);
                    if (result.status) {
                        window.location.reload();
                    } else {
                        alert(result.message);
                    }
                });
            } else {
                window.location.reload();
            }
        },
        changeSource    : function(e) {
            var source = $(e.target).val();
            $('.user-source').addClass('hide');
            $('#user-avatar-source-' + source).removeClass('hide');
            
            $('.preview-image').addClass('hide');
            $('.' + source).removeClass('hide');
        },
        changeGravatar  : function(e) {
            var email = $(e.target).val();
            var d   = new Object();
            d['email'] = email;
            $.post('<?php echo $this->url('', array('action' => 'gravatar')); ?>', d).done(function(res) {
                res = $.parseJSON(res);
                if (res.status) {
                    $('.user-gravatar-image').find('img').attr('src', res.preview_url);
                    var sizes = page.sizes();
                    for (var i = 0; i < sizes.length; i++) {
                        $('#user-preview-gravatar-' + sizes[i]).attr('src', res.preview_url);
                    }
                } else {
                    alert(res.message);
                }
            });
        },
        changeRepository    : function(e) {
            var name = $(e.target).val();
            var d   = new Object();
            d['name'] = name;
            $.post('<?php echo $this->url('', array('action' => 'repository')); ?>', d).done(function(res) {
                res = $.parseJSON(res);
                if (res.status) {
                    var sizes = page.sizes();
                    for (var i = 0; i < sizes.length; i++) {
                        var url = res.dirname + '/' + sizes[i] + '.' + res.ext;
                        $('#user-preview-repository-' + sizes[i]).attr('src', url);
                    }
                } else {
                    alert(res.message);
                }
            });
        }
    }
    page.init();
</script>
